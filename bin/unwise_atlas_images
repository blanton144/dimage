#!/usr/bin/env python

#
# Clip unWISE images and inverse variances
# out at locations for atlas.
#
# MRB 2015-03-11 
# 

import pdb
import os
import sys
import numpy as np
import astropy.wcs as wcs
import astropy.io.fits as pyfits
import dimage
from dimage.atlas import atlas
import getopt
import random

# Band names
bands=['w1', 'w2', 'w3', 'w4']

# Standard WISE AB corrections
wise2abs= [2.683,3.319,5.242,6.604]

nsa=atlas()

def unwise_atlas_image(galaxy):
    # Get directory with atlas images, make if necessary
    iauname=galaxy['IAUNAME']
    ra=galaxy['RA']
    dec=galaxy['DEC']
    size=galaxy['SIZE']
    subdir= nsa.filedir('original', iauname=iauname, survey='wise')
    try:
        os.makedirs(subdir)
    except:
        pass
        
    # Make each image
    for (band, wise2ab) in zip(bands, wise2abs):
        (image, ivar, wcs)= dimage.dcombine_wise(ra, dec, size, band)
        image= image*wise2ab
        ivar= ivar/wise2ab/wise2ab
        hdu0= pyfits.PrimaryHDU(data=image, header=wcs.to_header())
        hdu1= pyfits.ImageHDU(data=ivar, header=wcs.to_header())
        hdus= pyfits.HDUList(hdus=[hdu0,hdu1])
        outfile=nsa.filename('original', iauname=iauname, band=band,
                             survey='wise')
        hdus.writeto(outfile, clobber=True)

def main(argv):
    # Set defaults
    version='v1'
    istart=0
    iend=-1

    # Parse header
    helpstr='unwise_atlas_images -v <version> -s <start> -e <end>'
    try:
        opts, args = getopt.getopt(argv,"hv:s:e:",["help=","version=","start=","end="])
    except getopt.GetoptError:
        print helpstr
        sys.exit(2)
    for opt, arg in opts:
        if opt == ("-h", "--help"):
            print helpstr;
            sys.exit()
        elif opt in ("-s", "--start"):
            istart = int(arg)
        elif opt in ("-e", "--end"):
            iend = int(arg)
        elif opt in ("-v", "--version"):
            version = arg

    # Read in appropriate section of NSA file        
    atlasfile= nsa.file('atlas')
    atlas= pyfits.open(atlasfile)[1].data
    atlas=atlas[istart:iend]
    for galaxy in atlas:
        print galaxy['IAUNAME']
        unwise_atlas_image(galaxy)

if __name__ == "__main__": 
    try:
        main(sys.argv[1:])
    except:
        import sys
        tb = sys.exc_info()[2]
        pdb.post_mortem(tb)
