#!/usr/bin/env python

# Create v1_0_1 file with Petrosian quantities in it.
# 
# Mike Blanton, NYU 2015-10-02 

import pdb
import os
import sys
import re
import numpy as np
import fitsio
import dimage.utils.path

dpath= dimage.utils.path()

petro_dtype= np.dtype([('EPETRO_BA', np.float32), 
                       ('EPETRO_PHI', np.float32), 
                       ('EPETROTHETA', np.float32), 
                       ('EPETROFLUX', np.float32, (7,)),
                       ('EPETROIVAR', np.float32, (7,)),
                       ('EPETROTH50', np.float32, (7,)),
                       ('EPETROTH90', np.float32, (7,))])

kpetro_dtype= np.dtype([('EPETRO_NMGY', np.float32, (7,)), 
                        ('EPETRO_NMGY_IVAR', np.float32, (7,)), 
                        ('EPETRO_OK', np.int16), 
                        ('EPETRO_RNMGY', np.float32, (7,)), 
                        ('EPETRO_ABSMAG', np.float32, (7,)), 
                        ('EPETRO_AMIVAR', np.float32, (7,)), 
                        ('EPETRO_KCORRECT', np.float32, (7,)), 
                        ('EPETRO_KCOEFF', np.float32, (5,)), 
                        ('EPETRO_MASS', np.float32)])

def replace_dtype_name(dtype, oldname, newname):
    nn= list(dtype.names)
    ireplace= np.nonzero(np.array(nn) == oldname)[0][0]
    nn[ireplace]= newname
    dtype.names= tuple(nn)

def main(argv):
    old_version='v1_0_0'
    new_version='v1_0_1'

    nsafile= dpath.get('nsa', version='v1_0_0')
    newfile= os.path.basename(re.sub(old_version, new_version, nsafile))
    nsa= fitsio.read(nsafile)
    new_dtype= nsa.dtype

    petrofile= os.path.join(os.getenv('ATLAS_DATA'), 'test', 'petro',
                            'petro_v1_0_0_a3.fits')
    petro= fitsio.read(petrofile)

    kpetrofile= os.path.join(os.getenv('ATLAS_DATA'), 'test', 'petro',
                             'petro_kcorrect_v1_0_0_a3.fits')
    kpetro= fitsio.read(kpetrofile)

    # Construct new dtype:
    # - replace old quantities
    replace_dtype_name(new_dtype, 'NMGY', 'SERSIC_NMGY')
    replace_dtype_name(new_dtype, 'NMGY_IVAR', 'SERSIC_NMGY_IVAR')
    replace_dtype_name(new_dtype, 'OK', 'SERSIC_OK')
    replace_dtype_name(new_dtype, 'RNMGY', 'SERSIC_RNMGY')
    replace_dtype_name(new_dtype, 'ABSMAG', 'SERSIC_ABSMAG')
    replace_dtype_name(new_dtype, 'AMIVAR', 'SERSIC_AMIVAR')
    replace_dtype_name(new_dtype, 'KCORRECT', 'SERSIC_KCORRECT')
    replace_dtype_name(new_dtype, 'KCOEFF', 'SERSIC_KCOEFF')
    replace_dtype_name(new_dtype, 'MASS', 'SERSIC_MASS')
    
    # - append elliptical petro quantities
    new_dtype_descr= new_dtype.descr
    new_dtype_descr.extend(petro_dtype.descr)
    new_dtype_descr.extend(kpetro_dtype.descr)
    new_dtype= np.dtype(new_dtype_descr)

    # Create new structure
    new_nsa= np.zeros(nsa.shape, dtype=new_dtype)
    for name in nsa.dtype.names:
        new_nsa[name]= nsa[name]
    for name in petro_dtype.names:
        pname= re.sub('(EPETRO_?)', '', name).lower()
        if(pname != 'ba' and pname != 'phi'):
            pname= 'petro'+pname
        new_nsa[name]= petro[pname]
    for name in kpetro_dtype.names:
        kname= re.sub('(EPETRO_?)', '', name)
        new_nsa[name]= kpetro[kname]

    # Write out file
    fitsio.write(newfile, new_nsa, clobber=True)

if __name__ == "__main__": 
    try:
        main(sys.argv[1:])
    except:
        import sys
        tb = sys.exc_info()[2]
        pdb.post_mortem(tb)
