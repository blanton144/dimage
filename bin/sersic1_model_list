#!/usr/bin/env python

# Create Sersic 1D model list, based on Simard parameters
#
# MRB 2014-12-07
# 

import pdb
import getopt
import os
import sys
import numpy as np
import astropy.io.fits as pyfits
import dimage
from dimage.models import sersic1
import random

def main(argv):
    # Defaults
    number=10000
    take=None

    # Parse header
    helpstr='sersic1d_model_list [-s seed] [-n number]'
    try:
        opts, args = getopt.getopt(argv,"ht:s:n:",
                                   ["help=","take=","seed=","number="])
    except getopt.GetoptError:
        print helpstr
        sys.exit(2)
    for opt, arg in opts:
        if opt == ("-h", "--help"):
            print helpstr;
            sys.exit()
        elif opt in ("-t", "--take"):
            take = arg
        elif opt in ("-s", "--seed"):
            print "Warning: seed not used!"
            seed = int(arg)
        elif opt in ("-n", "--number"):
            number = int(arg)

    if(take is None):
        print "Must specify take with -t or --take"
        sys.exit()

    # Read in Simard file
    # COMP_DIR is env var for the location of the (dropbox) Simard files
    simfile= os.path.join(os.getenv('COMP_DIR'), 'simard-sdss-pn.fits')
    fp= pyfits.open(simfile)
    data= fp[1].data
    
    # Select a subset of good galaxies, put parameters into arcsec
    # Should be converted into pixels
    indx= (np.where((data['Scale'] > 0)*(data['rg2d'] < 17.5)*
                    (data['Rhlr'] > 0)))[0]
    r50= data['Rhlr'][indx]/data['Scale'][indx]
    rflux= 10.**(0.4*(22.5-data['rg2d'][indx]))
    n= data['ng'][indx]
    ba= 1.-data['e'][indx]
    phi= data['phi'][indx]
    
    # Avoid stars in this sample
    # Avoid n > 7.13 (creates error with dfake)
    indx= (np.where(r50 > 1.))[0]
    indx = (np.where(n < 7.13))[0]
    
    # Now pick subset 
    random.shuffle(indx)
    indx= indx[0:number]
    
    # Select values of subset
    r50= r50[indx]
    rflux= rflux[indx]
    n= n[indx]
    ba= ba[indx]
    phi= phi[indx]

    # Write out file
    modelname= 'simard-sersic1'
    sersic1.writelist(take, modelname, rflux, r50, n, phi, ba)

if __name__ == "__main__": 
    try:
        main(sys.argv[1:])
    except:
        import sys
        tb = sys.exc_info()[2]
        pdb.post_mortem(tb)
